#include <bits/stdc++.h>

#define fo(i,n) for(int i{};i<n;i++)
#define fo2(i,n) for(int i{1};i<=n;i++)
#define fo3(n,m) for(int i{n};i<m;i++)
#define fo4(x) for(auto each:x)

#define all(x) x.begin(),x.end()
#define sort(x) sort(all(x))
#define sort2(x) sort(x.begin(),x.end(), greater<int>())

#define vi vector<int>
#define vll vector<long long>
#define mp make_pair

#define p(x) for(auto each:x) cout<<each<<endl;
#define p2(x ) for(auto each:x) cout<<each<<" ";

using namespace std;

int fib(int num){
    int a{1}, b{2}, c{};
    if(num==1)
        return a;
    else if(num==2)
        return b;
    else{
        for(int i{3}; i<=num; i++){
            c = a + b;
            a = b;
            b = c;
        }
        return b;
    } 
}

int main(){
    int n{1},result{},sum{};
    while((result = fib(n)) < 4000000){
        if(result%2 == 0)
            sum += result;
        ++n;
    }
    cout<<sum<<endl;
    return 0;
}

/*        QUESTION

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

*/